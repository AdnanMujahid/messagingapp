rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is authenticated
    function isAuth() {
      return request.auth != null;
    }
    
    // Check if user is authenticated and matches the user ID
    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isUser(userId);
    }
    
    // Chats collection rules
    match /chats/{chatId} {
      allow read: if isAuth() && 
        request.auth.uid in resource.data.participants;
      allow create: if isAuth() &&
        request.auth.uid in request.resource.data.participants;
      allow update: if isAuth() &&
        request.auth.uid in resource.data.participants;
    }
    
    // Messages collection rules
    match /messages/{messageId} {
      allow read: if isAuth() && exists(/databases/$(database)/documents/chats/$(resource.data.chatId)) &&
        request.auth.uid in get(/databases/$(database)/documents/chats/$(resource.data.chatId)).data.participants;
      allow create: if isAuth() && exists(/databases/$(database)/documents/chats/$(request.resource.data.chatId)) &&
        request.auth.uid in get(/databases/$(database)/documents/chats/$(request.resource.data.chatId)).data.participants;
    }
  }
}